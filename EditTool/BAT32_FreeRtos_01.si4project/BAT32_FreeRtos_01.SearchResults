---- portMAX_DELAY Matches (24 in 10 files) ----
croutine.h (D:\M14D\PersonalProject\MCU_SystemSoftware\Rtos_Project_Folder\BAT32_FreeRtos_Project\SourceCode\FreeRTOSversion\FreeRTOS\Source\include) line 479 :  *      crQUEUE_RECEIVE( xHandle, xCoRoutineQueue, &uxLEDToFlash, portMAX_DELAY, &xResult );
croutine.h (D:\M14D\PersonalProject\MCU_SystemSoftware\Rtos_Project_Folder\BAT32_FreeRtos_Project\SourceCode\FreeRTOSversion\FreeRTOS\Source\include) line 566 :  *       crQUEUE_RECEIVE( xHandle, xCommsRxQueue, &uxLEDToFlash, portMAX_DELAY, &xResult );
event_groups.h (D:\M14D\PersonalProject\MCU_SystemSoftware\Rtos_Project_Folder\BAT32_FreeRtos_Project\SourceCode\FreeRTOSversion\FreeRTOS\Source\include) line 670 :  *      xEventGroupSync( xEventBits, TASK_1_BIT, ALL_SYNC_BITS, portMAX_DELAY );
event_groups.h (D:\M14D\PersonalProject\MCU_SystemSoftware\Rtos_Project_Folder\BAT32_FreeRtos_Project\SourceCode\FreeRTOSversion\FreeRTOS\Source\include) line 689 :  *      xEventGroupSync( xEventBits, TASK_2_BIT, ALL_SYNC_BITS, portMAX_DELAY );
vPortGetHeapStats in heap_4.c (D:\M14D\PersonalProject\MCU_SystemSoftware\Rtos_Project_Folder\BAT32_FreeRtos_Project\SourceCode\FreeRTOSversion\FreeRTOS\Source\portable\MemMang) :     size_t xBlocks = 0, xMaxSize = 0, xMinSize = portMAX_DELAY; /* portMAX_DELAY used as a portable way of getting the maximum value. */
vListInitialise in list.c (D:\M14D\PersonalProject\MCU_SystemSoftware\Rtos_Project_Folder\BAT32_FreeRtos_Project\SourceCode\FreeRTOSversion\FreeRTOS\Source) :     pxList->xListEnd.xItemValue = portMAX_DELAY;
vListInsert in list.c (D:\M14D\PersonalProject\MCU_SystemSoftware\Rtos_Project_Folder\BAT32_FreeRtos_Project\SourceCode\FreeRTOSversion\FreeRTOS\Source) :     if( xValueOfInsertion == portMAX_DELAY )
list.h (D:\M14D\PersonalProject\MCU_SystemSoftware\Rtos_Project_Folder\BAT32_FreeRtos_Project\SourceCode\FreeRTOSversion\FreeRTOS\Source\include) line 332 :  * pxList->xListEnd.xItemValue is set to portMAX_DELAY by the vListInitialise()
list.h (D:\M14D\PersonalProject\MCU_SystemSoftware\Rtos_Project_Folder\BAT32_FreeRtos_Project\SourceCode\FreeRTOSversion\FreeRTOS\Source\include) line 335 : #define listLIST_IS_INITIALISED( pxList )                ( ( pxList )->xListEnd.xItemValue == portMAX_DELAY )
message_buffer.h (D:\M14D\PersonalProject\MCU_SystemSoftware\Rtos_Project_Folder\BAT32_FreeRtos_Project\SourceCode\FreeRTOSversion\FreeRTOS\Source\include) line 267 :  * a time specified in ticks.  Setting xTicksToWait to portMAX_DELAY will cause
message_buffer.h (D:\M14D\PersonalProject\MCU_SystemSoftware\Rtos_Project_Folder\BAT32_FreeRtos_Project\SourceCode\FreeRTOSversion\FreeRTOS\Source\include) line 467 :  * into a time specified in ticks.  Setting xTicksToWait to portMAX_DELAY will
portmacro.h (D:\M14D\PersonalProject\MCU_SystemSoftware\Rtos_Project_Folder\BAT32_FreeRtos_Project\SourceCode\FreeRTOSversion\FreeRTOS\Source\portable\Keil\ARM_CM0P) line 62 :         #define portMAX_DELAY              ( TickType_t ) 0xffff
portmacro.h (D:\M14D\PersonalProject\MCU_SystemSoftware\Rtos_Project_Folder\BAT32_FreeRtos_Project\SourceCode\FreeRTOSversion\FreeRTOS\Source\portable\Keil\ARM_CM0P) line 65 :         #define portMAX_DELAY              ( TickType_t ) 0xffffffffUL
semphr.h (D:\M14D\PersonalProject\MCU_SystemSoftware\Rtos_Project_Folder\BAT32_FreeRtos_Project\SourceCode\FreeRTOSversion\FreeRTOS\Source\include) line 248 :  * time of portMAX_DELAY can be used to block indefinitely (provided
stream_buffer.h (D:\M14D\PersonalProject\MCU_SystemSoftware\Rtos_Project_Folder\BAT32_FreeRtos_Project\SourceCode\FreeRTOSversion\FreeRTOS\Source\include) line 268 :  * into a time specified in ticks.  Setting xTicksToWait to portMAX_DELAY will
stream_buffer.h (D:\M14D\PersonalProject\MCU_SystemSoftware\Rtos_Project_Folder\BAT32_FreeRtos_Project\SourceCode\FreeRTOSversion\FreeRTOS\Source\include) line 468 :  * ticks.  Setting xTicksToWait to portMAX_DELAY will cause the task to wait
tasks.c (D:\M14D\PersonalProject\MCU_SystemSoftware\Rtos_Project_Folder\BAT32_FreeRtos_Project\SourceCode\FreeRTOSversion\FreeRTOS\Source) line 379 : PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime = ( TickType_t ) 0U; /* Initialised to portMAX_DELAY before the scheduler starts. */
vTaskStartScheduler in tasks.c (D:\M14D\PersonalProject\MCU_SystemSoftware\Rtos_Project_Folder\BAT32_FreeRtos_Project\SourceCode\FreeRTOSversion\FreeRTOS\Source) :         xNextTaskUnblockTime = portMAX_DELAY;
xTaskIncrementTick in tasks.c (D:\M14D\PersonalProject\MCU_SystemSoftware\Rtos_Project_Folder\BAT32_FreeRtos_Project\SourceCode\FreeRTOSversion\FreeRTOS\Source) :                     xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
vTaskPlaceOnEventListRestricted in tasks.c (D:\M14D\PersonalProject\MCU_SystemSoftware\Rtos_Project_Folder\BAT32_FreeRtos_Project\SourceCode\FreeRTOSversion\FreeRTOS\Source) :             xTicksToWait = portMAX_DELAY;
xTaskCheckForTimeOut in tasks.c (D:\M14D\PersonalProject\MCU_SystemSoftware\Rtos_Project_Folder\BAT32_FreeRtos_Project\SourceCode\FreeRTOSversion\FreeRTOS\Source) :             if( *pxTicksToWait == portMAX_DELAY )
prvResetNextTaskUnblockTime in tasks.c (D:\M14D\PersonalProject\MCU_SystemSoftware\Rtos_Project_Folder\BAT32_FreeRtos_Project\SourceCode\FreeRTOSversion\FreeRTOS\Source) :         xNextTaskUnblockTime = portMAX_DELAY;
prvAddCurrentTaskToDelayedList in tasks.c (D:\M14D\PersonalProject\MCU_SystemSoftware\Rtos_Project_Folder\BAT32_FreeRtos_Project\SourceCode\FreeRTOSversion\FreeRTOS\Source) :             if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
